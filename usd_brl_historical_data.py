# -*- coding: utf-8 -*-
"""USD/BRL Historical Data.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14yLSLh_xv_9pQSERnWWg-1jQ-sZFCBTt

# USD/BRL analysis since 2004

##Importing Libraries
"""

"""
To work with data:
"""
import pandas as pd
"""
To work with arrays:
"""
import numpy as np
"""
To work with graphs:
"""
import matplotlib.pyplot as plt
import matplotlib.ticker as mticker
from matplotlib.ticker import AutoMinorLocator, MaxNLocator
from matplotlib.font_manager import FontProperties
from matplotlib.ticker import FuncFormatter

"""##Importing data"""

Data = pd.read_csv("/content/USD_BRL Historical Data.csv")
Data.head()

"""##Data selection"""

Data = Data[["Date", "Price"]]
Data.head()

"""##Data preprocessing"""

Data["Date"] = pd.to_datetime(Data["Date"])
Data.head()

#NAN data
Data.isna().sum()

"""###Division by President"""

Lula = Data[Data["Date"] < "2011-01-01"]
Dilma = Data[(Data["Date"] >= "2011-01-01") & (Data["Date"] < "2016-08-31")]
Temer = Data[(Data["Date"] >= "2016-08-31") & (Data["Date"] < "2019-01-01")]
Bolsonaro = Data[(Data["Date"] >= "2019-01-01") & (Data["Date"] < "2023-01-01")]
Lula_atual = Data[Data["Date"] >= "2023-01-01"]

"""##Ghaph"""

"""
Creation of the first text font to be used for axis labels
"""
font1 = {"family": "serif", "weight": "bold", "color": "black", "size": 12}

"""
Creation of the second text font to be used for the legend
"""
font2 = FontProperties(family = "serif",
                       weight = "bold",
                       size = 12)

"""
Creates a 'space' with size (15, 7) to allocate the figure
"""
fig, axs = plt.subplots(figsize = (15, 7))

"""
Plots a line chart between cumulative cases and cumulative deaths
"""
axs.plot(Lula["Date"],
         Lula["Price"],
         color = "red")
axs.plot(Dilma["Date"],
         Dilma["Price"],
         color = "orange")
axs.plot(Temer["Date"],
         Temer["Price"],
         color = "blue")
axs.plot(Bolsonaro["Date"],
         Bolsonaro["Price"],
         color = "green")
axs.plot(Lula_atual["Date"],
         Lula_atual["Price"],
         color = "red")
axs.grid(False)

"""
Setting the thickness and color of the axes
"""
for axis in ["left", "right", "top", "bottom"]:
    axs.spines[axis].set_linewidth(2)
    axs.spines[axis].set_color("black")

"""
Adjusting the graph ticks
"""
axs.xaxis.set_minor_locator(AutoMinorLocator())
axs.yaxis.set_minor_locator(AutoMinorLocator())
axs.tick_params(axis = "both", direction = "in", labelcolor = "black", labelsize = 12, left = True, bottom = True, top = False, right = False)
axs.tick_params(which = "major", direction = "in", color = "black", length = 5.4, width = 2.5, left = True, bottom = True, top = False, right = False)
axs.tick_params(which = "minor", direction = "in", color = "black", length=4, width = 2, left = True, bottom = True, top = False, right = False)

"""
Axis labels
"""
axs.set_ylabel("USD/BRL", fontdict = font1)
"""
formatter of the y-axis
"""
formatter = FuncFormatter(lambda x, _: f"{x:.2f}")
axs.yaxis.set_major_formatter(formatter)

"""
plt.rcParams["axes.labelweight"] = "bold" makes axis numbers bold
"""
plt.rcParams["axes.labelweight"] = "bold"

"""
Setting a white background for the figure
"""
fig.patch.set_facecolor("white")
Cor_fundo = plt.gca()
Cor_fundo.set_facecolor("white")
Cor_fundo.patch.set_alpha(1)

"""
Legend
"""
axs.legend(["Lula", "Dilma", "Temer", "Bolsonaro"],
           prop = font2,
           frameon=False,
           loc='upper left',
           bbox_to_anchor=(0.02, 1))
"""
Title
"""
plt.title("USD/BRL Exchange Rate by Presidential Term (2004â€“2023)", fontdict = font1)
"""
Show the graph:
"""
plt.show()